*&---------------------------------------------------------------------*
*& Report zhad_2021_01_1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zhad_2021_07_01.

INCLUDE zhad_2021_selection.

CLASS zhad_2021_local DEFINITION INHERITING FROM zhad_2021_base.

  PUBLIC SECTION.


    TYPES: BEGIN OF ty_input,
             position TYPE i,
           END OF ty_input.

    TYPES: BEGIN OF ty_data,
             position     TYPE i,
             sum_distance TYPE i,
           END OF ty_data.

    METHODS parse_input
      RAISING /wsv/cx_bp_general.

    METHODS main REDEFINITION.

  PRIVATE SECTION.

    DATA: mt_data      TYPE TABLE OF ty_input,
          mt_distances TYPE TABLE OF ty_data.


ENDCLASS.

CLASS zhad_2021_local IMPLEMENTATION.

  METHOD parse_input.

    DATA: ref_to_data        TYPE REF TO data.
    FIELD-SYMBOLS: <data>    TYPE ANY TABLE.

    CREATE DATA ref_to_data TYPE STANDARD TABLE OF ty_data.

    parse_input_text( EXPORTING seperator1       = CONV #( p_sep1 )
                                seperator1_space = p_sspace
                                newline_at_sep   = p_tnewl
                                remove_space     = p_remsp
                                replace_source   = p_reps
                                replace_target   = p_rept
                        CHANGING data            = ref_to_data ).

    ASSIGN ref_to_data->* TO <data>.
    mt_data = <data>.

  ENDMETHOD.

  METHOD main.

    SORT mt_data BY position.

    DATA(min) = mt_data[ 1 ].
    DATA(max) = mt_data[ lines( mt_data ) ].

    DATA: distance TYPE ty_data.

    "Build distances table
    distance-position = min-position.

    DO max-position - min-position + 1 TIMES.

      INSERT distance INTO TABLE mt_distances.
      distance-position = distance-position + 1.

    ENDDO.


    "Apply all crabs
    LOOP AT mt_data ASSIGNING FIELD-SYMBOL(<crab>).

      "and find all distances
      LOOP AT mt_distances ASSIGNING FIELD-SYMBOL(<distance>).
        <distance>-sum_distance = <distance>-sum_distance + ABS( <distance>-position - <crab>-position ).
      ENDLOOP.

    ENDLOOP.

    sort mt_distances by sum_distance ASCENDING.
    mv_result = mt_distances[ 1 ]-sum_distance.


  ENDMETHOD.



ENDCLASS.


INITIALIZATION.

  p_finput = p_finput && 'day07.txt'.

START-OF-SELECTION.

  TRY.

      DATA(riddle) = NEW zhad_2021_local( ).

      riddle->read_input( p_finput ).

      riddle->parse_input( ).

      riddle->main( ).

      riddle->print_result( ).


    CATCH /wsv/cx_bp_general INTO DATA(exception).

      exception->create_message( ).

  ENDTRY.
