*&---------------------------------------------------------------------*
*& Report zhad_2021_01_1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zhad_2021_06_01.

INCLUDE zhad_2021_selection.


CLASS zhad_2021_local DEFINITION INHERITING FROM zhad_2021_base.

  PUBLIC SECTION.


    TYPES: BEGIN OF ty_data,
             timer TYPE i,
           END OF ty_data.


    METHODS parse_input
      RAISING /wsv/cx_bp_general.

    METHODS main REDEFINITION.

  PRIVATE SECTION.

    DATA mt_data TYPE TABLE OF ty_data.


ENDCLASS.

CLASS zhad_2021_local IMPLEMENTATION.

  METHOD parse_input.

    DATA: ref_to_data        TYPE REF TO data.
    FIELD-SYMBOLS: <data>    TYPE ANY TABLE.

    CREATE DATA ref_to_data TYPE STANDARD TABLE OF ty_data.

    parse_input_text( EXPORTING seperator1       = CONV #( p_sep1 )
                                seperator1_space = p_sspace
                                newline_at_sep   = p_tnewl
                                remove_space     = p_remsp
                                replace_source   = p_reps
                                replace_target   = p_rept
                        CHANGING data            = ref_to_data ).

    ASSIGN ref_to_data->* TO <data>.
    mt_data = <data>.

  ENDMETHOD.

  METHOD main.

    DATA: temp    TYPE TABLE OF ty_data,
          newfish TYPE ty_data.


    newfish-timer = 8.


    DO 80 TIMES.

      CLEAR: temp.

      LOOP AT mt_data ASSIGNING FIELD-SYMBOL(<fish>).

        "spawn
        IF <fish>-timer = 0.

          INSERT newfish INTO TABLE temp.
          <fish>-timer = 7.

        ENDIF.

        <fish>-timer = <fish>-timer - 1.

      ENDLOOP.

      INSERT LINES OF temp INTO TABLE mt_data.

    ENDDO.

    mv_result = lines( mt_data ).

  ENDMETHOD.


ENDCLASS.


INITIALIZATION.

  p_finput = p_finput && 'day06.txt'.

START-OF-SELECTION.

  TRY.

      DATA(riddle) = NEW zhad_2021_local( ).

      riddle->read_input( p_finput ).

      riddle->parse_input( ).

      riddle->main( ).

      riddle->print_result( ).


    CATCH /wsv/cx_bp_general INTO DATA(exception).

      exception->create_message( ).

  ENDTRY.
